/*
OpenPay API

super charge your subscription management.

API version: 1.2.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package getopenpay

import (
	"bytes"
	"enco
	"fmt"
n
)

// checks if the CheckoutSessionExternal type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CheckoutSessionExternal{}

// CheckoutSessionExternal struct for CheckoutSessionExternal
type CheckoutSessionExternal struct {
	// Unique Identifier of the account.
	AccountId string `json:"account_id"`
	// Name of the account.
	AccountName string `json:"account_name"`
	// The integer amount representing the subtotal amount for the line items.
	AmountSubtotalAtom int32 `json:"amount_subtotal_atom"`
	// The integer amount representing the total amount for the line items, after discounts and taxes.
	AmountTotalAtom   int32          `json:"amount_total_atom"`
	ClientReferenceId NullableString `json:"client_reference_id,omitempty"`
	CouponId          NullableString `json:"coupon_id,omitempty"`
	// DateTime at which the object was created, in 'ISO 8601' format.
	CreatedAt     time.Time              `json:"created_at"`
	Currency      NullableString         `json:"currency"`
	CustomFields  map[string]interface{} `json:"custom_fields,omitempty"`
	CustomerEmail NullableString         `json:"customer_email"`
	CustomerId    NullableString         `json:"customer_id"`
	// Unique Identifier of the checkout session.
	Id string `json:"id"`
	// If true, indicates that this object has been deleted
	IsDeleted *bool                    `json:"is_deleted,omitempty"`
	Language  NullableCustomerLanguage `json:"language,omitempty"`
	// The line items purchased by the customers.
	LineItems []CheckoutSessionLineItemExternal `json:"line_items"`
	// The mode of the Checkout Session.
	Mode      CheckoutMode   `json:"mode"`
	Object    *ObjectName    `json:"object,omitempty"`
	ReturnUrl NullableString `json:"return_url"`
	// The random secure token associated with the checkout session.
	SecureToken string                      `json:"secure_token"`
	SetupIntent NullableSetupIntentExternal `json:"setup_intent"`
	// The current status of the checkout session.
	Status          CheckoutSessionStatus `json:"status"`
	SubscriptionId  NullableString        `json:"subscription_id,omitempty"`
	SubscriptionIds []string              `json:"subscription_ids"`
	SuccessUrl      NullableString        `json:"success_url"`
	// The integer amount representing the tax amount for the line items.
	TaxAmountAtom   int32         `json:"tax_amount_atom"`
	TrialEnd        NullableTime  `json:"trial_end"`
	TrialFromPrice  NullableBool  `json:"trial_from_price"`
	TrialPeriodDays NullableInt32 `json:"trial_period_days"`
	// DateTime at which the object was updated, in 'ISO 8601' format.
	UpdatedAt time.Time `json:"updated_at"`
	// The main URL for this checkout session.
	Url string `json:"url"`
}

type _CheckoutSessionExternal CheckoutSessionExternal

// NewCheckoutSessionExternal instantiates a new CheckoutSessionExternal object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCheckoutSessionExternal(accountId string, accountName string, amountSubtotalAtom int32, amountTotalAtom int32, createdAt time.Time, currency NullableString, customerEmail NullableString, customerId NullableString, id string, lineItems []CheckoutSessionLineItemExternal, mode CheckoutMode, returnUrl NullableString, secureToken string, setupIntent NullableSetupIntentExternal, status CheckoutSessionStatus, subscriptionIds []string, successUrl NullableString, taxAmountAtom int32, trialEnd NullableTime, trialFromPrice NullableBool, trialPeriodDays NullableInt32, updatedAt time.Time, url string) *CheckoutSessionExternal {
	this := CheckoutSessionExternal{}
	this.AccountId = accountId
	this.AccountName = accountName
	this.AmountSubtotalAtom = amountSubtotalAtom
	this.AmountTotalAtom = amountTotalAtom
	this.CreatedAt = createdAt
	this.Currency = currency
	this.CustomerEmail = customerEmail
	this.CustomerId = customerId
	this.Id = id
	var isDeleted bool = false
	this.IsDeleted = &isDeleted
	this.LineItems = lineItems
	this.Mode = mode
	this.ReturnUrl = returnUrl
	this.SecureToken = secureToken
	this.SetupIntent = setupIntent
	this.Status = status
	this.SubscriptionIds = subscriptionIds
	this.SuccessUrl = successUrl
	this.TaxAmountAtom = taxAmountAtom
	this.TrialEnd = trialEnd
	this.TrialFromPrice = trialFromPrice
	this.TrialPeriodDays = trialPeriodDays
	this.UpdatedAt = updatedAt
	this.Url = url
	return &this
}

// NewCheckoutSessionExternalWithDefaults instantiates a new CheckoutSessionExternal object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCheckoutSessionExternalWithDefaults() *CheckoutSessionExternal {
	this := CheckoutSessionExternal{}
	var isDeleted bool = false
	this.IsDeleted = &isDeleted
	return &this
}

// GetAccountId returns the AccountId field value
func (o *CheckoutSessionExternal) GetAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *CheckoutSessionExternal) GetAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *CheckoutSessionExternal) SetAccountId(v string) {
	o.AccountId = v
}

// GetAccountName returns the AccountName field value
func (o *CheckoutSessionExternal) GetAccountName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountName
}

// GetAccountNameOk returns a tuple with the AccountName field value
// and a boolean to check if the value has been set.
func (o *CheckoutSessionExternal) GetAccountNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountName, true
}

// SetAccountName sets field value
func (o *CheckoutSessionExternal) SetAccountName(v string) {
	o.AccountName = v
}

// GetAmountSubtotalAtom returns the AmountSubtotalAtom field value
func (o *CheckoutSessionExternal) GetAmountSubtotalAtom() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AmountSubtotalAtom
}

// GetAmountSubtotalAtomOk returns a tuple with the AmountSubtotalAtom field value
// and a boolean to check if the value has been set.
func (o *CheckoutSessionExternal) GetAmountSubtotalAtomOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AmountSubtotalAtom, true
}

// SetAmountSubtotalAtom sets field value
func (o *CheckoutSessionExternal) SetAmountSubtotalAtom(v int32) {
	o.AmountSubtotalAtom = v
}

// GetAmountTotalAtom returns the AmountTotalAtom field value
func (o *CheckoutSessionExternal) GetAmountTotalAtom() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AmountTotalAtom
}

// GetAmountTotalAtomOk returns a tuple with the AmountTotalAtom field value
// and a boolean to check if the value has been set.
func (o *CheckoutSessionExternal) GetAmountTotalAtomOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AmountTotalAtom, true
}

// SetAmountTotalAtom sets field value
func (o *CheckoutSessionExternal) SetAmountTotalAtom(v int32) {
	o.AmountTotalAtom = v
}

// GetClientReferenceId returns the ClientReferenceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CheckoutSessionExternal) GetClientReferenceId() string {
	if o == nil || IsNil(o.ClientReferenceId.Get()) {
		var ret string
		return ret
	}
	return *o.ClientReferenceId.Get()
}

// GetClientReferenceIdOk returns a tuple with the ClientReferenceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CheckoutSessionExternal) GetClientReferenceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ClientReferenceId.Get(), o.ClientReferenceId.IsSet()
}

// HasClientReferenceId returns a boolean if a field has been set.
func (o *CheckoutSessionExternal) HasClientReferenceId() bool {
	if o != nil && o.ClientReferenceId.IsSet() {
		return true
	}

	return false
}

// SetClientReferenceId gets a reference to the given NullableString and assigns it to the ClientReferenceId field.
func (o *CheckoutSessionExternal) SetClientReferenceId(v string) {
	o.ClientReferenceId.Set(&v)
}
nceId.Set(&v)
}

// SetClientReferenceIdNil sets the value for ClientReferenceId to b
// SetClientReferenceIdNil sets the value for ClientReferenceId to be an explicit nil
func (o *CheckoutSessionExternal) SetClientReferenceIdNil() {
	o.ClientReferenceId.Set(nil)
}

// UnsetClientReferenceId ensures that no value is present for ClientReferenceId, not even an explicit nil
func (o *CheckoutSessionExternal) UnsetClientReferenceId() {
	o.ClientReferenceId.Unset()
}

// GetCouponId returns the CouponId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CheckoutSessionExternal) GetCouponId() string {
	if o == nil || IsNil(o.CouponId.Get()) {
		var ret string
		return ret
	}
	return *o.CouponId.Get()
}

// GetCouponIdOk returns a tuple with the CouponId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CheckoutSessionExternal) GetCouponIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CouponId.Get(), o.CouponId.IsSet()
}

// HasCouponId returns a boolean if a field has been set.
func (o *CheckoutSessionExternal) HasCouponId() bool {
	if o != nil && o.CouponId.IsSet() {
		return true
	}

	return false
}

// SetCouponId gets a reference to the given NullableString and assigns it to the CouponId field.
.Set(&v)
}

// SetCouponIdNil sets the value for CouponId
func (o *CheckoutSessionExternal) SetCouponId(v string) {
	o.CouponId.Set(&v)
}
// SetCouponIdNil sets the value for CouponId to be an explicit nil
func (o *CheckoutSessionExternal) SetCouponIdNil() {
	o.CouponId.Set(nil)
}

// UnsetCouponId ensures that no value is present for CouponId, not even an explicit nil
func (o *CheckoutSessionExternal) UnsetCouponId() {
	o.CouponId.Unset()
}

// GetCreatedAt returns the CreatedAt field value
func (o *CheckoutSessionExternal) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *CheckoutSessionExternal) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *CheckoutSessionExternal) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetCurrency returns the Currency field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CheckoutSessionExternal) GetCurrency() string {
	if o == nil || o.Currency.Get() == nil {
		var ret string
		return ret
	}

	return *o.Currency.Get()
}

// GetCurrencyOk returns a tuple with the Currency field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CheckoutSessionExternal) GetCurrencyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Currency.Get(), o.Currency.IsSet()
}

// SetCurrency sets field value
func (o *CheckoutSessionExternal) SetCurrency(v string) {
	o.Currency.Set(&v)
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CheckoutSessionExternal) GetCustomFields() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CheckoutSessionExternal) GetCustomFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CustomFields) {
		return map[string]interface{}{}, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *CheckoutSessionExternal) HasCustomFields() bool {
	if o != nil && !IsNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given map[string]interface{} and assigns it to the CustomFields field.
func (o *CheckoutSessionExternal) SetCustomFields(v map[string]interface{}) {
	o.CustomFields = v
}

// GetCustomerEmail returns the CustomerEmail field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CheckoutSessionExternal) GetCustomerEmail() string {
	if o == nil || o.CustomerEmail.Get() == nil {
		var ret string
		return ret
	}

	return *o.CustomerEmail.Get()
}

// GetCustomerEmailOk returns a tuple with the CustomerEmail field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CheckoutSessionExternal) GetCustomerEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CustomerEmail.Get(), o.CustomerEmail.IsSet()
}

// SetCustomerEmail sets field value
func (o *CheckoutSessionExternal) SetCustomerEmail(v string) {
	o.CustomerEmail.Set(&v)
}

// GetCustomerId returns the CustomerId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CheckoutSessionExternal) GetCustomerId() string {
	if o == nil || o.CustomerId.Get() == nil {
		var ret string
		return ret
	}

	return *o.CustomerId.Get()
}

// GetCustomerIdOk returns a tuple with the CustomerId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CheckoutSessionExternal) GetCustomerIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CustomerId.Get(), o.CustomerId.IsSet()
}

// SetCustomerId sets field value
func (o *CheckoutSessionExternal) SetCustomerId(v string) {
	o.CustomerId.Set(&v)
}

// GetId returns the Id field value
func (o *CheckoutSessionExternal) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *CheckoutSessionExternal) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *CheckoutSessionExternal) SetId(v string) {
	o.Id = v
}

// GetIsDeleted returns the IsDeleted field value if set, zero value otherwise.
func (o *CheckoutSessionExternal) GetIsDeleted() bool {
	if o == nil || IsNil(o.IsDeleted) {
		var ret bool
		return ret
	}
	return *o.IsDeleted
}

// GetIsDeletedOk returns a tuple with the IsDeleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckoutSessionExternal) GetIsDeletedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDeleted) {
		return nil, false
	}
	return o.IsDeleted, true
}

// HasIsDeleted returns a boolean if a field has been set.
func (o *CheckoutSessionExternal) HasIsDeleted() bool {
	if o != nil && !IsNil(o.IsDeleted) {
		return true
	}

	return false
}

// SetIsDeleted gets a reference to the given bool and assigns it to the IsDeleted field.
func (o *CheckoutSessionExternal) SetIsDeleted(v bool) {
	o.IsDeleted = &v
}

// GetLanguage returns the Language field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CheckoutSessionExternal) GetLanguage() CustomerLanguage {
	if o == nil || IsNil(o.Language.Get()) {
		var ret CustomerLanguage
		return ret
	}
	return *o.Language.Get()
}

// GetLanguageOk returns a tuple with the Language field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CheckoutSessionExternal) GetLanguageOk() (*CustomerLanguage, bool) {
	if o == nil {
		return nil, false
	}
	return o.Language.Get(), o.Language.IsSet()
}

// HasLanguage returns a boolean if a field has been set.
func (o *CheckoutSessionExternal) HasLanguage() bool {
	if o != nil && o.Language.IsSet() {
		return true
	}

	return false
u
}

// SetLanguage gets a reference to the given NullableCustomerLanguage and assigns it to the Language field.
func (o *CheckoutSessionExternal) SetLanguage(v CustomerLanguage) {
	o.Language.Set(&v)
}
// SetLanguageNil sets the value for Language to be an explicit nil
func (o *CheckoutSessionExternal) SetLanguageNil() {
	o.Language.Set(nil)
}

// UnsetLanguage ensures that no value is present for Language, not even an explicit nil
func (o *CheckoutSessionExternal) UnsetLanguage() {
	o.Language.Unset()
}

// GetLineItems returns the LineItems field value
func (o *CheckoutSessionExternal) GetLineItems() []CheckoutSessionLineItemExternal {
	if o == nil {
		var ret []CheckoutSessionLineItemExternal
		return ret
	}

	return o.LineItems
}

// GetLineItemsOk returns a tuple with the LineItems field value
// and a boolean to check if the value has been set.
func (o *CheckoutSessionExternal) GetLineItemsOk() ([]CheckoutSessionLineItemExternal, bool) {
	if o == nil {
		return nil, false
	}
	return o.LineItems, true
}

// SetLineItems sets field value
func (o *CheckoutSessionExternal) SetLineItems(v []CheckoutSessionLineItemExternal) {
	o.LineItems = v
}

// GetMode returns the Mode field value
func (o *CheckoutSessionExternal) GetMode() CheckoutMode {
	if o == nil {
		var ret CheckoutMode
		return ret
	}

	return o.Mode
}

// GetModeOk returns a tuple with the Mode field value
// and a boolean to check if the value has been set.
func (o *CheckoutSessionExternal) GetModeOk() (*CheckoutMode, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Mode, true
}

// SetMode sets field value
func (o *CheckoutSessionExternal) SetMode(v CheckoutMode) {
	o.Mode = v
}

// GetObject returns the Object field value if set, zero value otherwise.
func (o *CheckoutSessionExternal) GetObject() ObjectName {
	if o == nil || IsNil(o.Object) {
		var ret ObjectName
		return ret
	}
	return *o.Object
}

// GetObjectOk returns a tuple with the Object field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckoutSessionExternal) GetObjectOk() (*ObjectName, bool) {
	if o == nil || IsNil(o.Object) {
		return nil, false
	}
	return o.Object, true
}

// HasObject returns a boolean if a field has been set.
func (o *CheckoutSessionExternal) HasObject() bool {
	if o != nil && !IsNil(o.Object) {
		return true
	}

	return false
}

// SetObject gets a reference to the given ObjectName and assigns it to the Object field.
func (o *CheckoutSessionExternal) SetObject(v ObjectName) {
	o.Object = &v
}

// GetReturnUrl returns the ReturnUrl field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CheckoutSessionExternal) GetReturnUrl() string {
	if o == nil || o.ReturnUrl.Get() == nil {
		var ret string
		return ret
	}

	return *o.ReturnUrl.Get()
}

// GetReturnUrlOk returns a tuple with the ReturnUrl field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CheckoutSessionExternal) GetReturnUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReturnUrl.Get(), o.ReturnUrl.IsSet()
}

// SetReturnUrl sets field value
func (o *CheckoutSessionExternal) SetReturnUrl(v string) {
	o.ReturnUrl.Set(&v)
}

// GetSecureToken returns the SecureToken field value
func (o *CheckoutSessionExternal) GetSecureToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SecureToken
}

// GetSecureTokenOk returns a tuple with the SecureToken field value
// and a boolean to check if the value has been set.
func (o *CheckoutSessionExternal) GetSecureTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SecureToken, true
}

// SetSecureToken sets field value
func (o *CheckoutSessionExternal) SetSecureToken(v string) {
	o.SecureToken = v
}

// GetSetupIntent returns the SetupIntent field value
// If the value is explicit nil, the zero value for SetupIntentExternal will be returned
func (o *CheckoutSessionExternal) GetSetupIntent() SetupIntentExternal {
	if o == nil || o.SetupIntent.Get() == nil {
		var ret SetupIntentExternal
		return ret
	}

	return *o.SetupIntent.Get()
}

// GetSetupIntentOk returns a tuple with the SetupIntent field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CheckoutSessionExternal) GetSetupIntentOk() (*SetupIntentExternal, bool) {
	if o == nil {
		return nil, false
	}
	return o.SetupIntent.Get(), o.SetupIntent.IsSet()
}

// SetSetupIntent sets field value
func (o *CheckoutSessionExternal) SetSetupIntent(v SetupIntentExternal) {
	o.SetupIntent.Set(&v)
}

// GetStatus returns the Status field value
func (o *CheckoutSessionExternal) GetStatus() CheckoutSessionStatus {
	if o == nil {
		var ret CheckoutSessionStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *CheckoutSessionExternal) GetStatusOk() (*CheckoutSessionStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *CheckoutSessionExternal) SetStatus(v CheckoutSessionStatus) {
	o.Status = v
}

// GetSubscriptionId returns the SubscriptionId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CheckoutSessionExternal) GetSubscriptionId() string {
	if o == nil || IsNil(o.SubscriptionId.Get()) {
		var ret string
		return ret
	}
	return *o.SubscriptionId.Get()
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CheckoutSessionExternal) GetSubscriptionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SubscriptionId.Get(), o.SubscriptionId.IsSet()
}

// HasSubscriptionId returns a boolean if a field has been set.
func (o *CheckoutSessionExternal) HasSubscriptionId() bool {
	if o != nil && o.SubscriptionId.IsSet() {
		return true
	}

	return false
o
}

// SetSubscriptionId gets a reference to the given NullableString and assigns it to the SubscriptionId field.
func (o *CheckoutSessionExternal) SetSubscriptionId(v string) {
	o.SubscriptionId.Set(&v)
}
// SetSubscriptionIdNil sets the value for SubscriptionId to be an explicit nil
func (o *CheckoutSessionExternal) SetSubscriptionIdNil() {
	o.SubscriptionId.Set(nil)
}

// UnsetSubscriptionId ensures that no value is present for SubscriptionId, not even an explicit nil
func (o *CheckoutSessionExternal) UnsetSubscriptionId() {
	o.SubscriptionId.Unset()
}

// GetSubscriptionIds returns the SubscriptionIds field value
// If the value is explicit nil, the zero value for []string will be returned
func (o *CheckoutSessionExternal) GetSubscriptionIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.SubscriptionIds
}

// GetSubscriptionIdsOk returns a tuple with the SubscriptionIds field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CheckoutSessionExternal) GetSubscriptionIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.SubscriptionIds) {
		return nil, false
	}
	return o.SubscriptionIds, true
}

// SetSubscriptionIds sets field value
func (o *CheckoutSessionExternal) SetSubscriptionIds(v []string) {
	o.SubscriptionIds = v
}

// GetSuccessUrl returns the SuccessUrl field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CheckoutSessionExternal) GetSuccessUrl() string {
	if o == nil || o.SuccessUrl.Get() == nil {
		var ret string
		return ret
	}

	return *o.SuccessUrl.Get()
}

// GetSuccessUrlOk returns a tuple with the SuccessUrl field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CheckoutSessionExternal) GetSuccessUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SuccessUrl.Get(), o.SuccessUrl.IsSet()
}

// SetSuccessUrl sets field value
func (o *CheckoutSessionExternal) SetSuccessUrl(v string) {
	o.SuccessUrl.Set(&v)
}

// GetTaxAmountAtom returns the TaxAmountAtom field value
func (o *CheckoutSessionExternal) GetTaxAmountAtom() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TaxAmountAtom
}

// GetTaxAmountAtomOk returns a tuple with the TaxAmountAtom field value
// and a boolean to check if the value has been set.
func (o *CheckoutSessionExternal) GetTaxAmountAtomOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TaxAmountAtom, true
}

// SetTaxAmountAtom sets field value
func (o *CheckoutSessionExternal) SetTaxAmountAtom(v int32) {
	o.TaxAmountAtom = v
}

// GetTrialEnd returns the TrialEnd field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *CheckoutSessionExternal) GetTrialEnd() time.Time {
	if o == nil || o.TrialEnd.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.TrialEnd.Get()
}

// GetTrialEndOk returns a tuple with the TrialEnd field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CheckoutSessionExternal) GetTrialEndOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.TrialEnd.Get(), o.TrialEnd.IsSet()
}

// SetTrialEnd sets field value
func (o *CheckoutSessionExternal) SetTrialEnd(v time.Time) {
	o.TrialEnd.Set(&v)
}

// GetTrialFromPrice returns the TrialFromPrice field value
// If the value is explicit nil, the zero value for bool will be returned
func (o *CheckoutSessionExternal) GetTrialFromPrice() bool {
	if o == nil || o.TrialFromPrice.Get() == nil {
		var ret bool
		return ret
	}

	return *o.TrialFromPrice.Get()
}

// GetTrialFromPriceOk returns a tuple with the TrialFromPrice field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CheckoutSessionExternal) GetTrialFromPriceOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.TrialFromPrice.Get(), o.TrialFromPrice.IsSet()
}

// SetTrialFromPrice sets field value
func (o *CheckoutSessionExternal) SetTrialFromPrice(v bool) {
	o.TrialFromPrice.Set(&v)
}

// GetTrialPeriodDays returns the TrialPeriodDays field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *CheckoutSessionExternal) GetTrialPeriodDays() int32 {
	if o == nil || o.TrialPeriodDays.Get() == nil {
		var ret int32
		return ret
	}

	return *o.TrialPeriodDays.Get()
}

// GetTrialPeriodDaysOk returns a tuple with the TrialPeriodDays field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CheckoutSessionExternal) GetTrialPeriodDaysOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.TrialPeriodDays.Get(), o.TrialPeriodDays.IsSet()
}

// SetTrialPeriodDays sets field value
func (o *CheckoutSessionExternal) SetTrialPeriodDays(v int32) {
	o.TrialPeriodDays.Set(&v)
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *CheckoutSessionExternal) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *CheckoutSessionExternal) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *CheckoutSessionExternal) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetUrl returns the Url field value
func (o *CheckoutSessionExternal) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *CheckoutSessionExternal) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

	toSerialize, err := o.ToMap()
func (o *CheckoutSessionExternal) SetUrl(v string) {
	o.Url = v
}

func (o CheckoutSessionExternal) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CheckoutSessionExternal) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["account_id"] = o.AccountId
	toSerialize["account_name"] = o.AccountName
	toSerialize["amount_subtotal_atom"] = o.AmountSubtotalAtom
	toSerialize["amount_total_atom"] = o.AmountTotalAtom
	if o.ClientReferenceId.IsSet() {
		toSerialize["client_reference_id"] = o.ClientReferenceId.Get()
	}
	if o.CouponId.IsSet() {
		toSerialize["coupon_id"] = o.CouponId.Get()
	}
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["currency"] = o.Currency.Get()
	if o.CustomFields != nil {
		toSerialize["custom_fields"] = o.CustomFields
	}
	toSerialize["customer_email"] = o.CustomerEmail.Get()
	toSerialize["customer_id"] = o.CustomerId.Get()
	toSerialize["id"] = o.Id
	if !IsNil(o.IsDeleted) {
		toSerialize["is_deleted"] = o.IsDeleted
	}
	if o.Language.IsSet() {
		toSerialize["language"] = o.Language.Get()
	}
	toSerialize["line_items"] = o.LineItems
	toSerialize["mode"] = o.Mode
	if !IsNil(o.Object) {
		toSerialize["object"] = o.Object
	}
	toSerialize["return_url"] = o.ReturnUrl.Get()
	toSerialize["secure_token"] = o.SecureToken
	toSerialize["setup_intent"] = o.SetupIntent.Get()
	toSerialize["status"] = o.Status
	if o.SubscriptionId.IsSet() {
		toSerialize["subscription_id"] = o.SubscriptionId.Get()
	}
	if o.SubscriptionIds != nil {
		toSerialize["subscription_ids"] = o.SubscriptionIds
	}
	toSerialize["success_url"] = o.SuccessUrl.Get()
	toSerialize["tax_amount_atom"] = o.TaxAmountAtom
	toSerialize["trial_end"] = o.TrialEnd.Get()
	toSerialize["trial_from_price"] = o.TrialFromPrice.Get()
	toSerialize["trial_period_days"] = o.TrialPeriodDays.Get()
	toSerialize["updated_at"] = o.UpdatedAt
	toSerialize["url"] = o.Url
	return toSerialize, nil
}

func (o *CheckoutSessionExternal) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"account_id",
		"account_name",
		"amount_subtotal_atom",
		"amount_total_atom",
		"created_at",
		"currency",
		"customer_email",
		"customer_id",
		"id",
		"line_items",
		"mode",
		"return_url",
		"secure_token",
		"setup_intent",
		"status",
		"subscription_ids",
		"success_url",
		"tax_amount_atom",
		"trial_end",
		"trial_from_price",
		"trial_period_days",
		"updated_at",
		"url",
	}
		return err
	allProperties := make(map[string]interface{})

	for _, requiredProperty := range requiredProperties {

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCheckoutSessionExternal := _CheckoutSessionExternal{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	err = decoder.Decode(&varCheckoutSessionExternal)

	if err != nil {
		return err
	}

	*o = CheckoutSessionExternal(varCheckoutSessionExternal)

	return err
}

type NullableCheckoutSessionExternal struct {
	value *CheckoutSessionExternal
	isSet bool
}

func (v NullableCheckoutSessionExternal) Get() *CheckoutSessionExternal {
	return v.value
}

func (v *NullableCheckoutSessionExternal) Set(val *CheckoutSessionExternal) {
	v.value = val
	v.isSet = true
}

func (v NullableCheckoutSessionExternal) IsSet() bool {
	return v.isSet
}

func (v *NullableCheckoutSessionExternal) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCheckoutSessionExternal(val *CheckoutSessionExternal) *NullableCheckoutSessionExternal {
	return &NullableCheckoutSessionExternal{value: val, isSet: true}
}

func (v NullableCheckoutSessionExternal) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


